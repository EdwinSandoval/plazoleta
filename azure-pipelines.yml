trigger:
  branches:
    include:
      - devops  # Define las ramas que activarán el pipeline cuando haya cambios

pool:
  vmImage: 'ubuntu-latest'  # Imagen de la máquina virtual en la que se ejecutará el pipeline

steps:
  - script: './gradlew build'  # Ejecuta el comando Gradle para compilar el proyecto
    displayName: 'Build project'

  - task: PublishTestResults@2
    displayName: 'Publish Test Results'
    inputs:
      testResultsFormat: 'JUnit'  # Formato de los resultados de las pruebas
      testResultsFiles: '**/TEST-*.xml'  # Ruta de los archivos de resultados de las pruebas

  - task: SonarQubePrepare@4
    inputs:
      SonarQube: 'SonarCloud'  # Opción para SonarQube/SonarCloud
      scannerMode: 'CLI'  # Modo CLI para ejecutar SonarQube desde línea de comandos
      projectKey: 'EdwinSandoval_microservices'  # Clave del proyecto en SonarQube/SonarCloud
      projectName: 'EdwinSandoval_microservices'  # Nombre del proyecto en SonarQube/SonarCloud
      extraProperties: |  # Propiedades adicionales para SonarQube (opcional)
        sonar.coverage.jacoco.xmlReportPaths=build/reports/jacoco/test/jacocoTestReport.xml
        sonar.exclusions=src/main/java/com/example/serviceplazoleta/ServicePlazoletaApplication.java,src/main/java/com/example/serviceplazoleta/application/**,src/main/java/com/example/serviceplazoleta/aws/Model/**,src/main/java/com/example/serviceplazoleta/domain/api/**,src/main/java/com/example/serviceplazoleta/domain/spi/**,src/main/java/com/example/serviceplazoleta/domain/exception/**,src/main/java/com/example/serviceplazoleta/domain/model/**,src/main/java/com/example/serviceplazoleta/infraestructure/client/**,src/main/java/com/example/serviceplazoleta/infraestructure/configuration/**,src/main/java/com/example/serviceplazoleta/infraestructure/exception/**,src/main/java/com/example/servicepl
